apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: postgres-init
          image: 'postgres:16.2-alpine3.19'
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "-c", "if [ ! -d /var/lib/postgresql/data ]; then sudo initdb -D /var/lib/postgresql/data; fi" ]
      containers:
        - name: postgres
          image: 'postgres:16.2-alpine3.19'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume-claim
      volumes:
        - name: postgres-volume-claim
          persistentVolumeClaim:
            claimName: postgres-volume-claim